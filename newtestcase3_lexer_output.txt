Token		Lexeme
SEPARATOR 	$$
SEPARATOR 	$$
KEYWORD   	integer
Identifier	x
SEPARATOR 	,
Identifier	y
SEPARATOR 	,
Identifier	sum
SEPARATOR 	,
Identifier	diff
SEPARATOR 	,
Identifier	prod
SEPARATOR 	,
Identifier	quot
SEPARATOR 	;
KEYWORD   	integer
Identifier	gt
SEPARATOR 	,
Identifier	lt
SEPARATOR 	,
Identifier	eq
SEPARATOR 	,
Identifier	neq
SEPARATOR 	,
Identifier	ge
SEPARATOR 	,
Identifier	le
SEPARATOR 	;
KEYWORD   	integer
Identifier	i
SEPARATOR 	,
Identifier	loopSum
SEPARATOR 	;
SEPARATOR 	$$
KEYWORD   	scan
SEPARATOR 	(
Identifier	x
SEPARATOR 	,
Identifier	y
SEPARATOR 	)
SEPARATOR 	;
Identifier	sum
OPERATOR  	=
Identifier	x
OPERATOR  	+
Identifier	y
SEPARATOR 	;
KEYWORD   	print
SEPARATOR 	(
Identifier	sum
SEPARATOR 	)
SEPARATOR 	;
Identifier	diff
OPERATOR  	=
Identifier	x
OPERATOR  	-
Identifier	y
SEPARATOR 	;
KEYWORD   	print
SEPARATOR 	(
Identifier	diff
SEPARATOR 	)
SEPARATOR 	;
Identifier	prod
OPERATOR  	=
Identifier	x
OPERATOR  	*
Identifier	y
SEPARATOR 	;
KEYWORD   	print
SEPARATOR 	(
Identifier	prod
SEPARATOR 	)
SEPARATOR 	;
Identifier	quot
OPERATOR  	=
Identifier	x
OPERATOR  	/
Identifier	y
SEPARATOR 	;
KEYWORD   	print
SEPARATOR 	(
Identifier	quot
SEPARATOR 	)
SEPARATOR 	;
Identifier	gt
OPERATOR  	=
Integer   	0
SEPARATOR 	;
KEYWORD   	if
SEPARATOR 	(
Identifier	x
OPERATOR  	>
Identifier	y
SEPARATOR 	)
Identifier	gt
OPERATOR  	=
Integer   	1
SEPARATOR 	;
KEYWORD   	endif
KEYWORD   	print
SEPARATOR 	(
Identifier	gt
SEPARATOR 	)
SEPARATOR 	;
Identifier	lt
OPERATOR  	=
Integer   	0
SEPARATOR 	;
KEYWORD   	if
SEPARATOR 	(
Identifier	x
OPERATOR  	<
Identifier	y
SEPARATOR 	)
Identifier	lt
OPERATOR  	=
Integer   	1
SEPARATOR 	;
KEYWORD   	endif
KEYWORD   	print
SEPARATOR 	(
Identifier	lt
SEPARATOR 	)
SEPARATOR 	;
Identifier	eq
OPERATOR  	=
Integer   	0
SEPARATOR 	;
KEYWORD   	if
SEPARATOR 	(
Identifier	x
OPERATOR  	==
Identifier	y
SEPARATOR 	)
Identifier	eq
OPERATOR  	=
Integer   	1
SEPARATOR 	;
KEYWORD   	endif
KEYWORD   	print
SEPARATOR 	(
Identifier	eq
SEPARATOR 	)
SEPARATOR 	;
Identifier	neq
OPERATOR  	=
Integer   	0
SEPARATOR 	;
KEYWORD   	if
SEPARATOR 	(
Identifier	x
OPERATOR  	!=
Identifier	y
SEPARATOR 	)
Identifier	neq
OPERATOR  	=
Integer   	1
SEPARATOR 	;
KEYWORD   	endif
KEYWORD   	print
SEPARATOR 	(
Identifier	neq
SEPARATOR 	)
SEPARATOR 	;
Identifier	ge
OPERATOR  	=
Integer   	0
SEPARATOR 	;
KEYWORD   	if
SEPARATOR 	(
Identifier	x
OPERATOR  	>=
Identifier	y
SEPARATOR 	)
Identifier	ge
OPERATOR  	=
Integer   	1
SEPARATOR 	;
KEYWORD   	endif
KEYWORD   	print
SEPARATOR 	(
Identifier	ge
SEPARATOR 	)
SEPARATOR 	;
Identifier	le
OPERATOR  	=
Integer   	0
SEPARATOR 	;
KEYWORD   	if
SEPARATOR 	(
Identifier	x
OPERATOR  	<=
Identifier	y
SEPARATOR 	)
Identifier	le
OPERATOR  	=
Integer   	1
SEPARATOR 	;
KEYWORD   	endif
KEYWORD   	print
SEPARATOR 	(
Identifier	le
SEPARATOR 	)
SEPARATOR 	;
Identifier	i
OPERATOR  	=
Integer   	5
SEPARATOR 	;
Identifier	loopSum
OPERATOR  	=
Integer   	0
SEPARATOR 	;
KEYWORD   	while
SEPARATOR 	(
Identifier	i
OPERATOR  	>
Integer   	0
SEPARATOR 	)
SEPARATOR 	{
Identifier	loopSum
OPERATOR  	=
Identifier	loopSum
OPERATOR  	+
Identifier	i
SEPARATOR 	;
Identifier	i
OPERATOR  	=
Identifier	i
OPERATOR  	-
Integer   	1
SEPARATOR 	;
SEPARATOR 	}
KEYWORD   	endwhile
KEYWORD   	print
SEPARATOR 	(
Identifier	loopSum
SEPARATOR 	)
SEPARATOR 	;
SEPARATOR 	$$
