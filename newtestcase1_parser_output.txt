<Rat25S> -> $$ <Opt Function Definitions> $$ <Opt Declaration List> $$ <Statement List> $$
Matched: Token: SEPARATOR, Lexeme: $$
<Opt Function Definitions> -> <Function Definitions> | epsilon
<Opt Function Definitions> -> epsilon
Matched: Token: SEPARATOR, Lexeme: $$
<Opt Declaration List> -> <Declaration List> | epsilon
<Declaration List> -> <Declaration> ; <Declaration List Prime>
<Declaration> -> <Qualifier> <IDs>
<Qualifier> -> integer | boolean | real
Matched: Token: KEYWORD, Lexeme: integer
<IDs> -> <Identifier> <IDs Prime>
Matched: Token: Identifier, Lexeme: x
<IDs Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Declaration List Prime> -> <Declaration> ; <Declaration List Prime>
<Declaration> -> <Qualifier> <IDs>
<Qualifier> -> integer | boolean | real
Matched: Token: KEYWORD, Lexeme: integer
<IDs> -> <Identifier> <IDs Prime>
Matched: Token: Identifier, Lexeme: y
<IDs Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Declaration List Prime> -> <Declaration> ; <Declaration List Prime>
<Declaration> -> <Qualifier> <IDs>
<Qualifier> -> integer | boolean | real
Matched: Token: KEYWORD, Lexeme: integer
<IDs> -> <Identifier> <IDs Prime>
Matched: Token: Identifier, Lexeme: z
<IDs Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Declaration List Prime> -> <Declaration> ; <Declaration List Prime>
<Declaration> -> <Qualifier> <IDs>
<Qualifier> -> integer | boolean | real
Matched: Token: KEYWORD, Lexeme: real
<IDs> -> <Identifier> <IDs Prime>
Matched: Token: Identifier, Lexeme: pi
<IDs Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Declaration List Prime> -> <Declaration> ; <Declaration List Prime>
<Declaration> -> <Qualifier> <IDs>
<Qualifier> -> integer | boolean | real
Matched: Token: KEYWORD, Lexeme: real
<IDs> -> <Identifier> <IDs Prime>
Matched: Token: Identifier, Lexeme: radius
<IDs Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Declaration List Prime> -> <Declaration> ; <Declaration List Prime>
<Declaration> -> <Qualifier> <IDs>
<Qualifier> -> integer | boolean | real
Matched: Token: KEYWORD, Lexeme: real
<IDs> -> <Identifier> <IDs Prime>
Matched: Token: Identifier, Lexeme: area
<IDs Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Declaration List Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: $$
<Statement List> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: x
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: 10
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: y
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: 20
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: z
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: x
<Term Prime> -> epsilon
<Expression Prime> -> + <Term> <Expression Prime> | - <Term> <Expression Prime>
Matched: Token: OPERATOR, Lexeme: +
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: y
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: pi
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: 3.14159
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: radius
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: 5.0
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: area
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: pi
<Term Prime> -> * <Factor> <Term Prime> | / <Factor> <Term Prime> | % <Factor> <Term Prime>
Matched: Token: OPERATOR, Lexeme: *
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: radius
<Term Prime> -> * <Factor> <Term Prime> | / <Factor> <Term Prime> | % <Factor> <Term Prime>
Matched: Token: OPERATOR, Lexeme: *
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: radius
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: x
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: x
<Term Prime> -> epsilon
<Expression Prime> -> + <Term> <Expression Prime> | - <Term> <Expression Prime>
Matched: Token: OPERATOR, Lexeme: +
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: 1
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: y
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: y
<Term Prime> -> epsilon
<Expression Prime> -> + <Term> <Expression Prime> | - <Term> <Expression Prime>
Matched: Token: OPERATOR, Lexeme: -
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: 5
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: z
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: x
<Term Prime> -> * <Factor> <Term Prime> | / <Factor> <Term Prime> | % <Factor> <Term Prime>
Matched: Token: OPERATOR, Lexeme: *
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: y
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: x
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: z
<Term Prime> -> * <Factor> <Term Prime> | / <Factor> <Term Prime> | % <Factor> <Term Prime>
Matched: Token: OPERATOR, Lexeme: /
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: 2
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: radius
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: radius
<Term Prime> -> epsilon
<Expression Prime> -> + <Term> <Expression Prime> | - <Term> <Expression Prime>
Matched: Token: OPERATOR, Lexeme: +
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: 1
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: area
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: area
<Term Prime> -> epsilon
<Expression Prime> -> + <Term> <Expression Prime> | - <Term> <Expression Prime>
Matched: Token: OPERATOR, Lexeme: -
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: 10.5
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: pi
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: pi
<Term Prime> -> * <Factor> <Term Prime> | / <Factor> <Term Prime> | % <Factor> <Term Prime>
Matched: Token: OPERATOR, Lexeme: *
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: 2
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: x
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: 100
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: y
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: 200
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: z
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: x
<Term Prime> -> epsilon
<Expression Prime> -> + <Term> <Expression Prime> | - <Term> <Expression Prime>
Matched: Token: OPERATOR, Lexeme: +
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: y
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: radius
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: 10.0
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> <Statement> <Statement List Prime>
<Statement> -> <Assign> | <If> | <While> | <Return> | <Scan> | <Print> | <Block>
<Assign> -> <Identifier> = <Expression> ;
Matched: Token: Identifier, Lexeme: area
Matched: Token: OPERATOR, Lexeme: =
<Expression> -> <Term> <Expression Prime>
<Term> -> <Factor> <Term Prime>
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: pi
<Term Prime> -> * <Factor> <Term Prime> | / <Factor> <Term Prime> | % <Factor> <Term Prime>
Matched: Token: OPERATOR, Lexeme: *
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: radius
<Term Prime> -> * <Factor> <Term Prime> | / <Factor> <Term Prime> | % <Factor> <Term Prime>
Matched: Token: OPERATOR, Lexeme: *
<Factor> -> - <Primary> | <Primary>
<Primary> -> <Identifier> | <Integer> | <Real> | ( <Expression> )
Matched: Token: Identifier, Lexeme: radius
<Term Prime> -> epsilon
<Expression Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: ;
<Statement List Prime> -> epsilon
Matched: Token: SEPARATOR, Lexeme: $$
